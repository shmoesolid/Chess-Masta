{"version":3,"sources":["components/ShaneBoard/index.jsx","pages/Home.jsx","context/userContext.js","misc/ErrorNotice.js","pages/Login.jsx","pages/Register.jsx","pages/AuthOptions.jsx","components/SidenavData.jsx","components/SideNav.jsx","components/Toggle.jsx","App.js","serviceWorker.js","index.js"],"names":["ShaneBoard","props","_useState","useState","_useState2","Object","slicedToArray","keyState","setKeyState","_useState3","_useState4","blackOnBottom","NUM_TO_LETTER","cellSize","getComputedStyle","document","documentElement","getPropertyValue","slice","game","selected","renderPiece","node","p","tableChess","getElementById","pieces","xDisp","x","imageWidth","yDisp","offsetHeight","y","imageHeight","innerHTML","color","toLowerCase","type","floorBySize","num","Math","floor","useEffect","console","log","_grid","react_default","a","createElement","className","id","onClick","event","bounding","getBoundingClientRect","abs","clientX","offsetWidth","offsetLeft","clientY","offsetTop","pageX","left","pageY","height","top","chessCol","chessRow","coords","clickedString","_getNodeByString","fromString","res","move","random","textContent","style","position","table","children","push","key","createBoard","width","Home","chesssk","setupNewGame","components_ShaneBoard","createContext","ErrorNotice","message","clearError","Login","email","setEmail","password","setPassword","_useState5","_useState6","error","setError","setUserData","useContext","UserContext","history","useHistory","submit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","loginUser","loginRes","wrap","_context","prev","next","preventDefault","Axios","post","sent","token","data","user","localStorage","setItem","t0","response","msg","stop","_x","apply","this","arguments","undefined","onSubmit","htmlFor","onChange","target","value","Register","passwordCheck","setPasswordCheck","_useState7","_useState8","displayName","setDisplayName","_useState9","_useState10","newUser","placeholder","AuthOptions","_useContext","userData","Fragment","headers","x-auth-token","getItem","delete","SidenavData","title","path","icon","index_esm","cName","io_index_esm","SideNav","map","item","index","react_router_dom","to","Toggle","react","click","App","sidenav","sidenavOpen","setSidenavOpen","userRes","get","checkLoggedIn","components_SideNav","close","userContext","Provider","Navbar","components_Toggle","Brand","href","aria-controls","Collapse","Nav","Item","react_router","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.da290eb7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nfunction ShaneBoard(props)\n{\n    var [ keyState, setKeyState ] = useState();\n    var [ piecesState, setPiecesState ] = useState([]);\n\n    var blackOnBottom = false;\n    var NUM_TO_LETTER = [ \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\" ];\n    var cellSize = getComputedStyle(document.documentElement).getPropertyValue('--cell-size').slice(0, -2); // removes 'px'\n\n    var game = props.game;\n    var selected = null;\n\n    useEffect(\n        testRender\n    );\n\n    // function for displaying pieces\n    function renderPiece(node)\n    {\n        // to do this we need piece IMAGE size, board CELL size (we have this)...\n        // ?? to start..\n        // ?? midpoint(x + cellSize / 2) to get middle coord of node (SAME FOR y)\n        // ?? get midpoint of image x and y\n        // SO...\n        // >> var imageWidth = 40; // FOR NOW (IMAGES ON HAND)\n        // >> var imageHeight = 40; // FOR NOW (IMAGES ON HAND)\n        // >> var xMid = (node.x + cellSize) / 2;\n        // >> var yMid = (node.y + cellSize) / 2;\n        // >> var xDisp = (xMid - imageWidth / 2);\n        // >> var yDisp = (yMid - imageHeight / 2);\n\n        // load the image in the board to get width/height\n        // ..disreguard for now (img size 40)\n\n        // make sure we have a piece\n        if (node.p === null)\n            return;\n\n        \n\n        // get references\n        var tableChess = document.getElementById(\"board\");\n        var pieces = document.getElementById(\"pieces\");\n\n        // test\n        var imageWidth = 40; // FOR NOW (IMAGE SIZE KNOWN)\n        var imageHeight = 40; // FOR NOW (IMAGE SIZE KNOWN)\n\n        // x moves with board\n        var xDisp = ((node.x * cellSize) + imageWidth / 4);\n\n        // y moves with board and needs to be inversed\n        var yDisp = tableChess.offsetHeight;\n        yDisp -= (((node.y * cellSize) + imageHeight) + imageHeight / 4);\n\n        // innerHTML is just for testing\n        pieces.innerHTML += \"<img src='assets/img/\"\n            + node.p.color.toLowerCase() \n            + node.p.type.toLowerCase()\n            +\".gif' alt='' style='position:absolute;top:\"+yDisp+\"px;left:\"+xDisp+\"px;z-index:10' />\";\n    }\n\n    function testRender()\n    {\n        // show grid\n        console.log(game._grid);\n\n        // lets show our pieces\n        for (var x=0;x<8;x++)\n            for (var y=0;y<8;y++)\n                renderPiece(game._grid[x][y]);\n    }\n\n    function floorBySize(num)\n    {\n        return Math.floor(num / cellSize);\n    }\n    \n    function showCoords(event)\n    {\n        var tableChess = document.getElementById(\"board\");\n        var bounding = tableChess.getBoundingClientRect();\n        var x;\n        var y;\n        \n        // white on bottom\n        if (!blackOnBottom)\n        {\n            // x = event.pageX - tableChess.offsetLeft;\n            // y = Math.abs(event.pageY - tableChess.offsetHeight - tableChess.offsetTop);\n            x = event.pageX - bounding.left;\n            y = Math.abs(event.pageY - bounding.height - bounding.top);\n        }\n        \n        // black on bottom\n        else\n        {\n            x = Math.abs(event.clientX - tableChess.offsetWidth - tableChess.offsetLeft);\n            y = event.clientY - tableChess.offsetTop;\n        }\n        \n        // get array indexes\n        var chessCol = floorBySize(x);\n        var chessRow = floorBySize(y);\n        \n        // setup display vars (DEBUG)\n        var coords = \"Actual: \" + x + \", \" + y\n            + \"<br />Array: [ \" + chessCol + \" ][ \" + chessRow + \" ]\"\n            + \"<br />Notation: \" + NUM_TO_LETTER[ chessCol ] + (chessRow + 1)\n            + \"<br />\";\n        \n        // display (DEBUG)\n        document.getElementById(\"coords\").innerHTML = coords;\n\n        // get node by string\n        var clickedString = NUM_TO_LETTER[ chessCol ] + (chessRow + 1);\n        console.log(clickedString);\n        var node = game._getNodeByString(clickedString);\n        console.log(node);\n\n        // handle toggle selection\n        if (selected === null)\n        {\n            // select if piece exists\n            if (node !== false && node.p !== null)\n                selected = node;\n        }\n\n        // deselect if same node clicked\n        else if (selected === node)\n            selected = null\n\n        // make the move\n        else\n        {\n            var fromString = NUM_TO_LETTER[ selected.x ] + (selected.y + 1);\n            var res = game.move(fromString, clickedString);\n            console.log(fromString, clickedString, res);\n            selected = null;\n\n            // refresh\n            setKeyState(Math.random());\n        }\n\n        document.getElementById(\"selected\").textContent = selected;\n    }\n\n    function createBoard() \n    {\n        let table = [];\n        for (let x=0; x<8; x++)\n        {\n            let children = [];\n            for (let y=0; y<8; y++) children.push(<td key={\"row-\"+y}/>);\n            table.push(<tr key={\"col-\"+x}>{children}</tr>);\n        }\n        return table;\n    }\n\n    return (\n        <div>\n            {/*chess board border*/}\n            <div className=\"board_border\" >\n                {/*chess board wrapper (where board table and pieces are handled)*/}\n                <div id=\"board\" onClick={showCoords} style={{position:\"relative\"}}>\n\n                    {/*board styling*/}\n                    <table id=\"t01\" >\n                        <tbody>{createBoard()}</tbody>\n                    </table>\n\n                    {/*pieces*/}\n                    <div id=\"pieces\" style={{height:\"0px\",width:\"0px\"}} key={keyState}></div>\n\n                </div>\n            </div>\n            \n            {/*current mouse click coords*/}\n            <div style={{color: 'white'}} >Selected:<span id=\"selected\"></span></div><br />\n            <div id=\"coords\" style={{color: 'white'}} />\n        </div>\n    );\n}\n\nexport default ShaneBoard;\n","import React from \"react\";\nimport \"../css/board.css\";\nimport ShaneBoard from \"../components/ShaneBoard\";\nimport chesssk from \"chesssk\";\n\nfunction Home() {\n  var game = new chesssk();\n  game.setupNewGame();\n  console.log(\"setting up new game...\");\n\n  return <ShaneBoard game={game} />;\n}\n\nexport default Home;\n","import { createContext } from \"react\";\n\nexport default createContext(null);","import React from \"react\";\n\nexport default function ErrorNotice(props) {\n  return (\n    <div className=\"error-notice\">\n      <span>{props.message}</span>\n      <button onClick={props.clearError}>X</button>\n    </div>\n  );\n}","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/userContext\";\nimport Axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\n\nimport \"../css/ComponentStyles.css\";\n\nexport default function Login() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async (e) => {\n    e.preventDefault();\n    try {\n      const loginUser = { email, password };\n      const loginRes = await Axios.post(\n        \"/users/login\",\n        loginUser\n      );\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n  return (\n    <div className=\"page\">\n      <h2>Log in</h2>\n      {error && (\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n      )}\n      <form className=\"form\" onSubmit={submit}>\n        <label htmlFor=\"login-email\">Email</label>\n        <input\n          id=\"login-email\"\n          type=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <label htmlFor=\"login-password\">Password</label>\n        <input\n          id=\"login-password\"\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <input type=\"submit\" value=\"Log in\" />\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport ErrorNotice from \"../misc/ErrorNotice\";\n\nimport \"../css/ComponentStyles.css\";\nimport UserContext from \"../context/userContext\";\n\nexport default function Register() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordCheck, setPasswordCheck] = useState();\n  const [displayName, setDisplayName] = useState();\n  const [error, setError] = useState();\n\n  const { setUserData } = useContext(UserContext);\n  const history = useHistory();\n\n  const submit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const newUser = { email, password, passwordCheck, displayName };\n      await Axios.post(\"/users/register\", newUser);\n      const loginRes = await Axios.post(\"/users/login\", {\n        email,\n        password,\n      });\n      setUserData({\n        token: loginRes.data.token,\n        user: loginRes.data.user,\n      });\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\n      history.push(\"/\");\n    } catch (err) {\n      err.response.data.msg && setError(err.response.data.msg);\n    }\n  };\n  return (\n    <div className=\"page\">\n      <h2>New User? Create an Account.</h2>\n      {error && (\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\n      )}\n      <form className=\"form\" onSubmit={submit}>\n        <label htmlFor=\"register-email\">Email</label>\n        <input\n          id=\"register-email\"\n          type=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        <label htmlFor=\"register-password\">Password</label>\n        <input\n          id=\"register-password\"\n          type=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Verify password\"\n          onChange={(e) => setPasswordCheck(e.target.value)}\n        />\n\n        <label htmlFor=\"register-display-name\">Display name</label>\n        <input\n          id=\"register-display-name\"\n          type=\"text\"\n          onChange={(e) => setDisplayName(e.target.value)}\n        />\n\n        <input type=\"submit\" value=\"Register\" />\n      </form>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/userContext\";\nimport Axios from \"axios\";\n\nexport default function AuthOptions() {\n  const { userData, setUserData } = useContext(UserContext);\n\n  const history = useHistory();\n\n  const register = () => history.push(\"/register\");\n  const login = () => history.push(\"/login\");\n  const logout = () => {\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n  };\n  const deleteUser = () => {\n    const user = { headers: { \"x-auth-token\": localStorage.getItem(\"auth-token\", \"\") } };\n    Axios.delete(\"/users/delete\", user);\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    history.push(\"/login\");\n  };\n\n  return (\n    <nav className=\"auth-options\">\n      {userData.user ? (\n        <>\n          <div>\n            <button onClick={logout}>Log out</button>\n          </div>\n          <div>\n            <button onClick={deleteUser}>Delete Account</button>\n          </div>\n        </>\n      ) : (\n        <>\n          <button onClick={register}>Register</button>\n          <button onClick={login}>Log in</button>\n        </>\n      )}\n    </nav>\n  );\n}\n","import React from \"react\";\n// import * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidenavData = [\n  {\n    title: \"Home\",\n    path: \"/\",\n    icon: <AiIcons.AiFillHome />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Rooms\",\n    path: \"/rooms\",\n    icon: <IoIcons.IoMdPeople />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"User Profile\",\n    path: \"/auth-options\",\n    icon: <IoIcons.IoMdPeople />,\n    cName: \"nav-text\",\n  },\n  {\n    title: \"Docs\",\n    path: \"/documentation\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\",\n  },\n];\n","import React from \"react\";\nimport \"../css/ComponentStyles.css\";\nimport { SidenavData } from \"./SidenavData\";\nimport { Link } from \"react-router-dom\";\n\nconst SideNav = (props) => {\nreturn (\n    <div>\n      <ul>\n        {SidenavData.map((item, index) => {\n          return (\n            <li key={index} className={item.cName}>\n              <Link to={item.path}>\n                {item.icon}\n                <span>&nbsp;{item.title}</span>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SideNav;\n","import React, { Fragment } from \"react\";\nimport \"../css/ComponentStyles.css\";\n\nconst Toggle = (props) => {\n  return (\n    <Fragment>\n      <button className=\"m-auto pt-0\" id=\"toggle\" onClick={props.click}>\n        &#8801;\n      </button>\n    </Fragment>\n  );\n};\n\nexport default Toggle;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Axios from \"axios\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport AuthOptions from \"./pages/AuthOptions\";\n\nimport SideNav from \"./components/SideNav\";\nimport Toggle from \"./components/Toggle\";\n\nimport UserContext from \"./context/userContext\";\n\nfunction App() {\n  const [sidenavOpen, setSidenavOpen] = useState(true);\n\n  // user auth\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n\n      let token = localStorage.getItem(\"auth-token\"); // TODO\n\n      if (token === null) {\n\n        localStorage.setItem(\"auth-token\", \"\"); // TODO\n\n        token = \"\";\n      }\n      const tokenRes = await Axios.post(\n        \"/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get(\"/users\", {\n          headers: { \"x-auth-token\": token },\n        });\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  const openHandler = () => {\n    if (!sidenavOpen) {\n      setSidenavOpen(true);\n    } else {\n      setSidenavOpen(false);\n    }\n  };\n\n  const sidenavCloseHandler = () => {\n    setSidenavOpen(false);\n  };\n\n  let sidenav;\n  if (sidenavOpen) {\n    sidenav = <SideNav close={sidenavCloseHandler} sidenav=\"sidenav\" />;\n  }\n\n  return (\n    <div className=\"App\">\n      <>\n        <Router>\n          <UserContext.Provider value={{ userData, setUserData }}>\n            <Navbar className=\"sticky-top\">\n              <Toggle click={openHandler} />\n              <Navbar.Brand href=\"/\">Chess Masta Logo</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                  <Nav.Item>{userData.user ? (<p>Welcome, {userData.user.displayName}!</p>) : (<><Link to=\"/login\">Login</Link></>)}</Nav.Item>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n            <div className=\"row m-0\">\n              <div className=\"col-md-3\">{sidenav}</div>\n              <div className=\"col-md-8\">\n                <Switch>\n                  <Route path=\"/\" exact component={Home} />\n                  <Route path=\"/login\" exact component={Login} />\n                  <Route path=\"/register\" exact component={Register} />\n                  <Route path=\"/auth-options\" exact component={AuthOptions} />\n                </Switch>\n              </div>\n            </div>\n          </UserContext.Provider>\n        </Router>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}